/*2) Implement Johnson Trotter algorithm to generate permutations.*/
#include <stdio.h>

int num;
int p[100], pi[100];
int dir[100];

void PrintPerm()
{
   for (int i=1; i <= num;i++)
      printf( "%d", p[i] );
}



void PrintTrans( int x, int y )
{
    printf("\t mobile compnents:");    
	printf( " (%d %d)", x, y );
   printf( "\n" );
}



void Move( int x, int d )
{
   int z;
   PrintTrans( pi[x], pi[x]+d );
   z = p[pi[x]+d];
   p[pi[x]] = z;
   p[pi[x]+d] = x;
   pi[z] = pi[x];
   pi[x] = pi[x]+d;
}



void Per(int n )
{
   if (n > num)
      PrintPerm();
   else
   {
      Per( n+1 );
      for (int i=1; i<=n-1;i++)
      {
         Move( n, dir[n] );
         Per( n+1 );
      }
      dir[n] = -dir[n];
   }
}

void main ()
{
   printf( "Enter the integer number : " );
   scanf( "%d", &num );
   for (int i=1; i<=num;i++)
   {
      dir[i] = -1;
       p[i] = i;
      pi[i] = i;
   }
   Per(1);
   printf( "\n" );

}
